parameters:
  - name: readmeFile
    type: string

  - name: trigger
    type: string

  - name: triggerType
    type: string

  - name: serviceType
    type: string

  - name: sdk
    type: string

steps:
  - bash: |
      publishResult \
        --storageType=eventhub \
        --pipelineStatus=in_progress \
        --buildId="$(Build.BuildId)" \
        --trigger='${{ parameters.trigger }}'
      if [ $? -ne 0 ]; then
          exit 1
      fi
    displayName: Publish status
    env:
      EVENTHUB_SAS_URL: $(EVENTHUB_SAS_URL)
    condition: ne('${{ parameters.triggerType }}', 'release')
    
  - bash: |
      #TODO: use real config
      ls -al `pwd`/net/autorest.md
      ls -al `pwd`/js/autorest.md
      if [ ${{parameters.sdk}} = "js" ]; then
        #echo "# azure-sdk-for-js\n\`\`\` yaml\noutput-folder: sdk/demoservice/newservice-demo-rest\nrequire:\n  - specification/demoservice/data-plane/readme.md\n\`\`\`" > /tmp/output/autorest.md
        
        docker run --privileged \
          -v $(SPEC_REPO):/spec-repo \
          -v $(SDK_REPO):/sdk-repo \
          -v `pwd`/js/autorest.md:/autorest.md \
          -v /tmp/output:/tmp/output \
          $(DOCKER_IMAGE) \
          --readme=${{ parameters.readmeFile }}
        #cat /tmp/output/autorest.md
        cat `pwd`/js/autorest.md
      elif [ ${{parameters.sdk}} = "net" ]; then
        #echo "# azure-sdk-for-net-track2
        #\`\`\` yaml
        #output-folder: sdk/demoservice/Azure.IoT.NewServiceDemo
        #require:
        #- specification/demoservice/data-plane/readme.md
        #\`\`\`" > /tmp/output/autorest.md
        
        docker run --privileged \
          -v $(SPEC_REPO):/spec-repo \
          -v $(SDK_REPO):/sdk-repo \
          -v `pwd`/net/autorest.md:/autorest.md \
          -v /tmp/output:/tmp/output \
          $(DOCKER_IMAGE) \
          --readme=${{ parameters.readmeFile }}
        #cat /tmp/output/autorest.md
        cat `pwd`/net/autorest.md
      fi


      #docker run --privileged \
      #  -v $(SPEC_REPO):/spec-repo \
      #  -v $(SDK_REPO):/sdk-repo \
      #  -v /tmp/output/autorest.md:/autorest.md \
      #  -v /tmp/output:/tmp/output \
      #  $(DOCKER_IMAGE) \
      #  --readme=${{ parameters.readmeFile }}
      if [ $? -ne 0 ]; then
          exit 1
      fi
    displayName: Generate sdk
    condition: eq('${{ parameters.serviceType }}', 'data-plane')
  
  - bash: |
      docker run --privileged \
        -v $(SPEC_REPO):/spec-repo \
        -v $(SDK_REPO):/sdk-repo \
        -v /tmp/output:/tmp/output \
        $(DOCKER_IMAGE) \
        --readme=${{ parameters.readmeFile }}
      if [ $? -ne 0 ]; then
          exit 1
      fi
    displayName: Generate sdk
    condition: eq('${{ parameters.serviceType }}', 'resource-manager')

  - bash: |
      #TODO: delete this bash
      echo "check output dir"
      ls /tmp/output
      echo "show docker.log"
      head -n 30 /tmp/output/docker.log
      echo "*****"
      tail -n 30 /tmp/output/docker.log
      echo "show generateAndBuild-task.log"
      head -n 30 /tmp/output/generateAndBuild-task.log
      echo "*****"
      tail -n 30 /tmp/output/generateAndBuild-task.log
      echo "show generateAndBuildInput.json"
      cat /tmp/output/generateAndBuildInput.json
      echo "show generateAndBuildOutputJson.json"
      cat /tmp/output/generateAndBuildOutputJson.json
      echo "show init-task.log"
      head -n 30 /tmp/output/init-task.log
      echo "*****"
      tail -n 30 /tmp/output/init-task.log
      echo "show taskResults.json"
      cat /tmp/output/taskResults.json

      echo "show mock-host.log"
      head -n 30 /tmp/output/mock-host.log | echo "don't quite even failed"
      echo "*****"
      tail -n 30 /tmp/output/mock-host.log | echo "don't quite even failed"

      echo "show mockTest-task.log"
      head -n 30 /tmp/output/mockTest-task.log | echo "don't quite even failed"
      echo "*****"
      tail -n 30 /tmp/output/mockTest-task.log | echo "don't quite even failed"

      echo "show mockTestOutput.json"
      cat /tmp/output/mockTestOutput.json | echo "don't quite even failed"
    displayName: Check output dir
    condition: always()